MutationalPatterns v3.7.1 (Release date: 2022-05-20)

Changes:

* Other:
  + Update version number to match new Bioconductor release.
  + Fixed a mistake in the description of the get_known_signatures function.

MutationalPatterns v3.5.6 (Release date: 2022-03-04)

Changes:

* Improvements:
  + The seed of the extract_signatures function can now be set by the user.
    
    
MutationalPatterns v3.5.5 (Release date: 2022-02-23)

Changes:

* Other:
  + The README, DESCRIPTION and CITATION files now point to the newly published manuscript describing the package.


MutationalPatterns v3.5.4 (Release date: 2022-02-11)

Changes:

* Bugfixes:
  + Updated unit-test so it no longer fails incorrectly.


MutationalPatterns v3.5.3 (Release date: 2021-12-16)

Changes:

* Other:
  + cos_sim_matrix can now accept tibbles as its input.
  + cos_sim_matrix now throws a clearer error when non-numeric inputs are used.

MutationalPatterns v3.5.2 (Release date: 2021-11-23)

Changes:

* Other:
  + read_vcfs_as_granges will now keep duplicate variants if the new remove_duplicate_variants option is set to FALSE.


MutationalPatterns v3.5.1 (Release date: 2021-11-03)

Changes:

* Other:
  + Bumped version number and required R version for the new Bioconductor release cycle.
  + Updated citation to bioRxiv manuscript.



MutationalPatterns v3.3.5 (Release date: 2021-10-13)

Changes:

* New features:
  + Regional mutational patterns can now be investigated using an unsupervised 
    approach with the determine_regional_similarity and plot_regional_similarity functions.
    This method can identify regions of the genome with a mutational pattern that is different
    from the rest of the genome.

* Bugfixes:
  + plot_rainfall now gives a clearer error when a GRangesList is used, instead of a GRanges object.
  + The order of the samples in the plot created by plot_lesion_segregation now matches that in the GRangesList.
  + Fixed a bug in calculate_lesion_segregation that occurred when a run in the rl20 contained the first mutation in a sample.



MutationalPatterns v3.3.4 (Release date: 2021-07-16)

Changes:

* Bugfixes:
  + Fixed a bug in fit_to_signatures_strict, which caused it to trow an error when only a single signature contributed to a mutation matrix.



MutationalPatterns v3.3.3 (Release date: 2021-07-05)

Changes:

* Bugfixes:
  + "guides(<scale> = FALSE)" is deprecated and therefore replaced with "guides(<scale> = 'none')".


MutationalPatterns v3.3.2 (Release date: 2021-06-17)
=====================================================

Changes:

* Improvements:
  + The plot_rainfall function now also works on indels, 
    DBSs and MBSs instead of only on SNVs.
    
* Other
  + Introduced some global variables to reduce code duplication.

MutationalPatterns v3.3.1 (Release date: 2021-06-10)
=====================================================

Changes:

* Bugfixes:
  + Fixed format of the NEWS file.
  
* Other
  + The author info has been updated.
  + Version number bumped for development version of Bioconductor 3.14.


MutationalPatterns v3.1.8 (Release date: 2021-04-29)
=====================================================

Changes:

* Improvements:
  + Added a subsample argument to plot_lesion_segregation that allows the user to subsample
    the amount of mutations. This way the plot becomes smaller and easier to modify in a vector
    program like illustrator.
  + Clarified in the documentation that read_vcfs_as_granges reads only SNVs by default.
  + Reduced size of the callableloci-sample.bed example file.

* Bugfixes:
  + Fixed issue with incorrect ordering of the chromosome names in plot_lesion_segregation.

MutationalPatterns v3.1.7
=====================================================

Changes:

* New features:
  + fit_to_signatures_strict can now use a "best subset" signature selection method 
    in addition to the "backwards" selection method. This can lead to more accurate results,
    but is computationally infeasible when using a large signature set.
    
* Improvements:
  + extract_signatures now has a "fudge" parameter, which can prevent errors 
    caused by constant columns, when using the "variational_bayes" nmf.

MutationalPatterns v3.1.6
=====================================================

Changes:

* Improvements:
  + Version 3.2 of the COSMIC mutational signatures have been included.
    Both the GRCh37 (default), GRCh38 and mm10 version of these signatures can be used.
    Version 3.1 of the COSMIC signatures is also still supported for now.
  + The size of the example vcfs of the colon, intestine and liver
    has been reduced. This was done by removing parts of the file that were discarded
    by read_vcfs_as_granges. The GRanges object that is created after reading in one
    of these vcfs hasn't changed.

MutationalPatterns v3.1.5
=====================================================

Changes:

* Improvements:
  + Reduced the runtime of several long examples and unit-tests.

MutationalPatterns v3.1.4
=====================================================

Changes:

* Improvements:
  + Plot lesion segregation now has background strips.
  + Plot_rainfall can now remove more chromosome prefixes from the labels. 
  chromosome(_), group(_) and chrom can now be removed in addition to chr. All are case insensitive.
  + Improved the description in the vignette of choosing the cut-off for strict refitting.
  + Fixed spelling mistakes.

MutationalPatterns v3.1.3
=====================================================

Changes:

* Improvements:
  + Plot_lesion_segregation has been improved. It can now plot multiple samples at the same time.
    Users can also specify which chromosomes they want to plot. The plot now also contains colour and
    the ratio of the mutations on the chromosomal strands is 
    visualised by a horizontal line per chromosome.

MutationalPatterns v3.1.2
=====================================================

Changes:

* Improvements:
  + The plot_correlation_bootstrap output now shows less dominant colours for the
    absent signatures.
  + The rename_nmf_signatures function now adds the "-like" suffix to renamed signatures,
    by default.
  + The plot_river function now shows the number of mutations per sample.
  + The read_vcfs_as_granges function now has a "predefined_dbs_mbs" argument, for when
    dbs and mbs variants are already defined in the vcfs. This prevents merging of snvs.
  + The get_indel_context function now looks for repeats both to the left and to the right of the
    indel. Previously it only looked to the right of the indel.


MutationalPatterns v2.99.7 (Release date: 2020-10-28)
=====================================================

Changes:

* Bugfixes:
  + The last five COSMIC SNV signatures contained incorrect context orders. This has now been fixed
    by using the latest COSMIC version (3.1.1). These also contain more digits after the decimal.


MutationalPatterns v2.99.5 (Release date: 2020-10-19)
=====================================================

Changes:

* Bugfixes:
  + The plot_river function had an issue with factors on R 4.0.0.
    This is now resolved.

MutationalPatterns v2.99.4 (Release date: 2020-10-14)
=====================================================

Changes:

* New features:
  + Added support for Indel variants. Mutation matrixes and profile plots can be
    generated for these variants. Signature extraction and refitting is also possible.
  + Added support for DBS variants. Mutation matrixes and profile plots can be
    generated for these variants. Signature extraction and refitting is also possible.
  + Added support for MBS variants. Mutation matrixes and profile plots can be
    generated for these variants. Signature extraction and refitting is also possible.
  + The SNV profiles are now cleaner, because the DBS and MBS support means they are
    no longer classified as SNVs.
  + Added the get_mut_type function, which allows users to filter for a 
    mutation type of interest. A shortcut to do this directly via 
    read_vcfs_as_granges is also supported.
  + The mut_matrix, mut_matrix_stranded, mut_context and type_context functions now 
    support a wider mutational context.
  + Mutational SNV profiles can be visualized as a heatmap with the plot_profile_heatmap 
    function. This supports profiles that have a wider context.
  + Mutational SNV profiles can be visualized as a riverplot with the plot_river
    function. This supports profiles that have a wider context.
  + Added the fit_to_signatures_strict function. This function allows for more
    stringent signature refitting, which doesn't suffer from overfitting.
  + Added support for bootstrapped signature refitting. The 
    fit_to_signatures_bootstrapped function can be used to determine the confidence 
    of signature refits. The plot_bootstrapped_contribution function can be used to
    plot the results as a dotplot, jitter plot or bar graph.
  + Added support for region specific analyses. Mutations can now be split based
    on user defined regions with the split_muts_region function. This way regions can
    be treated as separate samples. Instead of treating regions as samples, they can
    also be treated as mutation features with the lengthen_mut_matrix function. These two
    new functions together with existing functions allow for the extraction of signatures 
    that are region specific or that have different mutation contexts in different regions. 
    Graphs to compare the spectra and profiles between different regions can be made,
    using the plot_spectrum_region and plot_profile_region functions.
  + Added support for lesion segregation analyses. The presence of lesion segregation 
    can be calculated in multiple ways using the calculate_lesion_segregation function.
    Lesion segregation can also be visualized with the plot_lesion_segregation function.
  + mut_matrix and mut_matrix_stranded are now vectorized, which improves
    their runtime.
  + The potential damage that a signature can do, can be determined by looking at the number of 
    "stop gain", "mismatch", "synonymous" or "splice site" mutations it could cause in a user 
    supplied set of genes. This is first done per mutational context with the 
    context_potential_damage_analysis function. Its output can then be used with the 
    signature_potential_damage_analysis function.
  + The COSMIC signatures have been updated to version 3.1 (Alexandrov, L.B. et al., 2020, Nature).
    Additionally, we added the SIGNAL and Sparse signatures 
    (Andrea Degasperi et al., 2020, Nature Cancer; Daniele Ramazzotti et al., 2019, Bioarchive).
    Signatures can now be easily retrieved with the get_known_signatures function.
  + The plot_spectrum function can now plot individual samples as points.
  + The plot_spectrum function can now use a 95% confidence interval (default), 
    standard deviation or standard error of the mean for its error bars. Previously,
    only the standard deviation was supported.
  + Unit tests have been made for all functions, resulting in a test coverage of
    more than 90%.
  + The extract_signatures function now supports a variational bayes NMF algorithm
    from the ccfindR package.
  + The enrichment_depletion_test and strand_bias_test functions now calculate a
    fdr value in addition to a p-value.
  + The cutoff p-value or fdr-value for the enrichment_depletion_test and 
    strand_bias_test functions can now be supplied by the user. Multiple cutoff values
    can be used, which will result in multiple significance stars.
  + Extracted signatures can now be renamed based on already existing signatures,
    using the rename_nmf_signatures function.
  + The cosine similarity between reconstructed profiles and the original can be
    plotted with the plot_original_vs_reconstructed function.
  + Signatures that are very similar can be merged with the merge_signatures function.
  + Tissue specific signature contributions can be converted to reference signatures
    using the convert_sigs_to_ref function.
  + Regions with different mutation densities can be determined using the 
    bin_mutation_density function. This can be useful for region specific analyses.
  + Improved single sample support. Functions like mut_matrix and
    mut_matrix_stranded now work on a single GRanges object, instead
    of only on a GRangesList.
  + The plot_contribution_heatmap and plot_cosine_heatmap functions can now perform
    clustering on both their rows and their columns. A predetermined order can also be given
    for both the rows and the columns.
  + Multiple samples within a mutation matrix can now be pooled together using the 
    pool_mut_mat function, to increase statistical power.
  + Tests are performed to check whether input GRanges objects match the supplied 
    reference genome. Clear error messages are generated when this is not the case.
  + The plot_contribution function no longer requires a signature matrix as input,
    when working on signature refitting data.
  + Instead of supplying the name of a BSgenome object as an argument to functions
    that require it, users can now also directly use the object itself.
  + A new vignette has been made for the new version of the package.
  + Some functions have been rewritten for clarity.
  
* Bugfixes:
  + A bug in the mut_strand function caused incorrect results for replication strand bias 
    analyses. This is now fixed.
  + The binomial_test function is now properly two-sided.
  + The plot_rainfall function now sorts its input. This prevents incorrect results
    on unsorted input.
  + The mutations_from_vcf function didn't work on empty GRanges objects. This is now fixed.
  + Removed messages about using certain variables as a "grouping variable".
  + Removed warnings about using alpha as a variable.
  + The read_vcfs_as_granges function no longer throws an error, when trying to read
    in an empty vcf file.
  + The alignment of angled x-axes on plots has been fixed. This issue was most notable
    for the heatmaps.
  + The read_vcfs_as_granges function no longer supplies a genome name to the internally
    used readVcf function. This fixed an issue caused by updates to the seqnames dependency.
  + A clear error message is thrown in cases where the 'seqlevelsStyle' can’t be changed by 
    read_vcfs_as_granges or when the filtering of seqlevel groups doesn’t work. 
    It’s now possible to not change the 'seqlevelsStyle' with read_vcfs_as_granges to 
    circumvent these errors.
  + The defunct functions mutation_context, mutation_types, strand_from_vcf and
    explained_by_signatures have been removed.
  + The plot_rainfall function plots "chr1" as 1, to save space. This is now 
    case-insesitive, so it will also work on "Chr1".

* Other
  + The author info has been updated.

MutationalPatterns v1.6.2 (Release date: 2018-10-18)
=====================================================

Changes:

* Update Francis's e-mail address.


MutationalPatterns v1.4.3 (Release date: 2018-03-16)
=====================================================

Changes:

* Bugfixes:
  + Fix colors in plot_rainfall so that missing substitutions don't shift colors.
  + Return a ggplot object from plot_enrichment_depletion.

* Other:
  + Move gridExtra to suggested packages because it isn't
    used in the code.  The vignette does use it to show
    how plots can be combined into a single figure.


MutationalPatterns v1.4.2 (Release date: 2017-12-19)
=====================================================

Changes:

* Improvements:
  + Improve error handling with parallel functions.

* Bugfixes:
  + Fix bug related to generic function overlap between NMF and DelayedArray.
  + Up the cowplot dependency to fix empty plots bug.


MutationalPatterns v1.4.1 (Release date: 2017-11-13)
=====================================================

Changes:

* Improvements:
  + Avoid letting lines run off the paper in the PDF vignette.


MutationalPatterns v1.4.0 (Release date: 2017-10-30)
=====================================================

Changes:

* Bioconductor 3.6 release.


MutationalPatterns v1.3.2 (Release date: 2017-10-24)
=====================================================

Changes:

* Bugfixes:
  + Removed deprecated functions from previous release.
  + Improved examples in documentation.


MutationalPatterns v1.3.1 (Release date: 2017-10-24)
=====================================================

Changes:

* Bugfixes:
  + Fix running of the code examples.


MutationalPatterns v1.3.0 (Release date: 2017-10-22)
=====================================================

Changes:

* Bugfixes:
  + To determine the transcriptional strand of mutations in genes,
    all mutations that overlap with multiple genes were excluded.
    When these genes are on different strands, it can indeed not
    be determined whether a mutation is on the transcribed or
    untransribed strand. However, if these overlapping genes are all
    on the same strand, the transcriptional strand can be determined,
    but these were unneccesarily removed from the analysis.
    This bug is now fixed, and as a result more mutations are now
    included in the analysis.
    This bugfix influences the results of:
    'mut_strand' (previously 'strand_from_vcf') and 'mut_matrix_stranded'

* Renamed functions:
  + 'strand_from_vcf' to 'mut_strand'
  + 'mutation_types' to 'mut_type'
  + 'mutation_context' to 'mut_context'

* New features & parameter changes:
  + Replicative strand bias analyses
    - 'mut_strand' and 'mut_matrix_stranded' can now be executed in two modes:
      'transcription' (default) or 'replication'
    - All downstream analyses can be performed for both modes with
      'strand_occurrences', 'strand_bias_test' and 'plot_strand_bias'
  + Condensed plotting option for 'plot_96_profile' and 'plot_192_profile'
    condensed = F (default), or condensed = T
  + Sample can be hierarchically clustered.

* New functions:
  + 'plot_contribution_heatmap': to visualize the relative contribution of
    mutational signatures in a heatmap. Samples can be hierarchically clustered.
  + 'cos_sim': to calculate the cosine similarity between two vectors.
  + 'cos_sim_matrix': to calculate all pairwise similarities between mutational profiles
  + 'cluster_signatures': to hierarchically cluster signatures based on cosine similarity
  + 'plot_cosine_heatmap': to visualize pairwise cosine similarities between mutational profiles in a heatmap


MutationalPatterns v1.1.3 (Release date: 2017-04-20)
=====================================================

Changes:

* Fourth preparation release for Bioconductor 3.5.

* Bugfixes:
  + Add missing package to 'Suggest' field.


MutationalPatterns v1.1.3 (Release date: 2017-04-20)
=====================================================

Changes:

* Third preparation release for Bioconductor 3.5.

* Bugfixes:
  + Fix running of a unit test.
  + Fix another build problem for Windows.


MutationalPatterns v1.1.2 (Release date: 2017-04-18)
=====================================================

Changes:

* Third preparation release for Bioconductor 3.5.

* Bugfixes:
  + Properly read external data for tests.
  + Fix build problems on Windows.


MutationalPatterns v1.1.1 (Release date: 2017-04-12)
=====================================================

Changes:

* Second preparation release for Bioconductor 3.5.


MutationalPatterns v1.1.0 (Release date: 2017-04-06)
=====================================================

Changes:

* Preparations for Bioconductor release 3.5.

* Interface changes:
  + 'read_vcfs_as_granges':  The 'genome' parameter
    must now be the name of a BSgenome library, to prevent
    problems with seqlevels style.

    The function now accepts an optional 'group' parameter to
    use a subset of chromosomes.

    It also accepts  the new optional 'check_alleles'
    parameter to significantly speed up the reading of VCF files.

  + 'plot_contribution': This function now accepts an
    optional parameter 'palette' to specify custom colors.

* Performance updates:
  + Implement parallel execution in 'read_vcfs_as_granges',
    'mut_matrix' and 'mut_matrix_stranded'.

* Bugfixes:
  + Fix 'mut_type_occurences' to handle missing types.
  + Fix 'mut_matrix' and 'mut_matrix_stranded' to emit warnings
    when processing empty GRanges.
  + Fix inconsistencies in the README and the vignette.

* Other changes:
  + Various vignette updates.
  + Added unit tests for 'read_vcfs_as_granges', 'mut_matrix',
    and 'mut_matrix_stranded'.


MutationalPatterns v1.0.0 (Release date: 2016-10-19)
=====================================================

Changes:

* Bioconductor release 3.4.


MutationalPatterns v0.99.6 (Release date: 2016-10-14)
=====================================================

Changes:

* Renamed functions:
  + 'mut_type_occurences' to 'mut_type_occurrences',
  + 'strand_occurences' to 'strand_occurrences'.


MutationalPatterns v0.99.5 (Release date: 2016-10-06)
=====================================================

Changes:

* Added deprecation and defunct messages to functions that have
  changed since the v0.99.0.
* Various small vignette and reference manual updates.


MutationalPatterns v0.99.4 (Release date: 2016-10-05)
=====================================================

Changes:

* Internal package loading changes.
* Removed files that do not belong to the package.


MutationalPatterns v0.99.3 (Release date: 2016-09-28)
=====================================================

Changes:

* Renamed functions:
  + 'get_mut_context' to 'mutation_context',
  + 'get_type_context' to 'type_context',
  + 'get_muts' to 'mutations_from_vcf',
  + 'get_strand' to 'strand_from_vcf'.

* Added an explanation for the difference between SomaticSignatures
  and MutationalPatterns in the vignette.


MutationalPatterns v0.99.2 (Release date: 2016-09-23)
=====================================================

Changes:

* Renamed functions: 'vcf_to_granges' to 'read_vcfs_as_granges',
    'get_types' to 'mutation_types'.


MutationalPatterns v0.99.1 (Release date: 2016-09-13)
=====================================================

Changes:

* Renamed functions:
  + 'read_vcf' to 'vcf_to_granges'.

* Removed functions:
  + 'bed_to_granges',
  + 'estimate_rank',
  + 'rename_chrom'.

* Parameter changes:
  + 'plot_rainfall',
  + 'vcf_to_granges'.


MutationalPatterns v0.99.0 (Release date: 2016-09-12)
=====================================================

Changes:

* Package created