# Process this file with autoconf to produce a configure script.
AC_INIT(ims library, 0.5.0, apervukh@minet.uni-jena.de, imslib)
AC_PREREQ(2.59)
AC_CONFIG_AUX_DIR([config])
AM_INIT_AUTOMAKE([subdir-objects nostdinc])
AC_SUBST([AM_CPPFLAGS],['-I. -I./src -I$(srcdir)/src'])

AC_LANG(C++)
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

AC_CONFIG_HEADER([config.h])


# Checks for programs.
AC_PROG_CXX

if test "$GXX" = yes; then
	CXXFLAGS="-Wall -W -Wwrite-strings -Wundef $CXXFLAGS"
##	CXXFLAGS="-W -Wall -Wfloat-equal -Wundef -Weffc++ -Wwrite-strings -Winline -Wno-unused $CXXFLAGS"
fi

IMS_CFLAGS="-I$includedir"
IMS_LIBS="-L$libdir -lims"
AC_SUBST(IMS_CFLAGS)
AC_SUBST(IMS_LIBS)

AC_DEFINE_UNQUOTED(CONFIGURE_ARGS, "${ac_configure_args}", "configure arguments")

IMS_ENABLE_64BIT

dnl TODO
dnl --enable-debug and --disable-debug don't work quite correctly.
dnl They don't influence the -g CXXFLAGS setting (and perhaps shouldn't).
dnl Has to do with AC_PROG_CXX and that it sets default CXXFLAGS of "-O2 -g".

dnl AC_MSG_CHECKING([if debug is set])
debug_enable=no
AC_ARG_ENABLE([debug],AC_HELP_STRING([--enable-debug],[debugging mode]), [debug_enable=$enableval])
if test x$debug_enable = xyes && test x$GXX = xyes; then
dnl	CXXFLAGS="$CXXFLAGS -g"
	AC_DEFINE(DEBUG, 1, Debug)
else
	AC_DEFINE(NDEBUG, 1, No Debug)
fi

AM_PATH_CPPUNIT(1.8.0,[
	HAVE_CPPUNIT="yes";
	CXXFLAGS="$CPPUNIT_CFLAGS $CXXFLAGS";
],[
	HAVE_CPPUNIT="no"
	AC_MSG_WARN([Cppunit not found, make check will not work])
])
AC_SUBST(CPPUNIT_LIBS)
AC_SUBST(CPPUNIT_CFLAGS)
AM_CONDITIONAL([CPPUNIT], [test x$HAVE_CPPUNIT = xyes] )

# Checks for header files.
#AC_HEADER_STDC
#AC_CHECK_HEADERS([stdlib.h])

# Checks for library functions.
#AC_FUNC_STRFTIME

# Check for some C99 functions, TODO: round(f|l), floor(f|l)
AC_CHECK_LIB([m],[round],[AC_DEFINE([HAVE_ROUND],[1],[C99 function])])
#AC_CHECK_LIB([m],[roundf],[AC_DEFINE([HAVE_ROUNDF],[1],[C99 function])])
#AC_CHECK_LIB([m],[roundl],[AC_DEFINE([HAVE_ROUNDL],[1],[C99 function])])
# TODO: check if in header
AC_CHECK_LIB([m],[floor],[AC_DEFINE([HAVE_FLOOR],[1],[C99 function])])
#AC_CHECK_LIB([m],[floorf],[AC_DEFINE([HAVE_FLOORF],[1],[C99 function])])
#AC_CHECK_LIB([m],[floorl],[AC_DEFINE([HAVE_FLOORL],[1],[C99 function])])

#AC_CHECK_FUNCS([pow round rint printf])

if test x$ac_cv_lib_m_round = xno && test x$ac_cv_lib_m_floor = xno; then
	AC_MSG_ERROR(["neither floor nor round available in libm"])
fi

# ----------------------------------------------------------------------
# Add code to config.status to create an installable host dependent
# math.h file.
# TODO: maybe add some stuff (here and in Makefile.am) to provide
# TODO: regeneration when make is called. see
# TODO: http://sourceware.org/autobook/autobook/autobook_96.html#SEC96 for
# TODO: details about this.
# ----------------------------------------------------------------------
AC_CONFIG_COMMANDS([headercreation],[
	mkdir -p src/ims/utils
	outfile=src/ims/utils/math.h
	echo "config.status: creating $outfile"
	cat > $outfile << _EOF_
/* --------------------------------------------------------------------
 * DO NOT EDIT THIS FILE!  It has been automatically generated
 * by configure on host: `(hostname || uname -n) 2>/dev/null | sed 1q`
 * --------------------------------------------------------------------
 */
#ifndef IMS_MATH_H
#define IMS_MATH_H

#include <math.h>

_EOF_

	if test x$ac_cv_lib_m_round = xno; then
		if test x$ac_cv_lib_m_floor = xyes; then
		cat >> $outfile << _EOF_
inline double round(double x) {
	if (x>=0) {
		return floor(x+0.5);
	} else {
		return -floor(-x+0.5);
	}

}
_EOF_
		fi
	fi
	echo "#endif" >> $outfile
],[
  srcdir=$srcdir
  ac_cv_lib_m_round=$ac_cv_lib_m_round
  ac_cv_lib_m_floor=$ac_cv_lib_m_floor
])

# Output files.
AC_CONFIG_FILES([Makefile libims.pc])
AC_OUTPUT

echo
echo "imslib configuration:"
echo
echo "          Compiler: ${CXX}"
echo "            Linker: ${LD}"
echo "    Compiler flags: ${CXXFLAGS}"
echo "Preprocessor flags: ${CPPFLAGS}"
echo "      Linker flags: ${LDFLAGS}"
echo
echo " CppUnit available: ${HAVE_CPPUNIT}"
#echo "sizeof(long long): ${SIZEOF_LONG_LONG}"
#echo "    sizeof(long): ${SIZEOF_LONG}"
echo
