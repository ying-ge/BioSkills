% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchit2full.R
\name{method_full}
\alias{method_full}
\title{Optimal Full Matching}
\arguments{
\item{formula}{a two-sided \link{formula} object containing the treatment and
covariates to be used in creating the distance measure used in the matching.
This formula will be supplied to the functions that estimate the distance
measure.}

\item{data}{a data frame containing the variables named in \code{formula}.
If not found in \code{data}, the variables will be sought in the
environment.}

\item{method}{set here to \code{"full"}.}

\item{distance}{the distance measure to be used. See \code{\link{distance}}
for allowable options. Can be supplied as a distance matrix.}

\item{link}{when \code{distance} is specified as a method of estimating
propensity scores, an additional argument controlling the link function used
in estimating the distance measure. See \code{\link{distance}} for allowable
options with each option.}

\item{distance.options}{a named list containing additional arguments
supplied to the function that estimates the distance measure as determined
by the argument to \code{distance}.}

\item{estimand}{a string containing the desired estimand. Allowable options
include \code{"ATT"}, \code{"ATC"}, and \code{"ATE"}. The estimand controls
how the weights are computed; see the Computing Weights section at
\code{\link[=matchit]{matchit()}} for details.}

\item{exact}{for which variables exact matching should take place.}

\item{mahvars}{for which variables Mahalanobis distance matching should take
place when \code{distance} corresponds to a propensity score (e.g., for
caliper matching or to discard units for common support). If specified, the
distance measure will not be used in matching.}

\item{antiexact}{for which variables anti-exact matching should take place.
Anti-exact matching is processed using \pkgfun{optmatch}{antiExactMatch}.}

\item{discard}{a string containing a method for discarding units outside a
region of common support. Only allowed when \code{distance} corresponds to a
propensity score.}

\item{reestimate}{if \code{discard} is not \code{"none"}, whether to
re-estimate the propensity score in the remaining sample prior to matching.}

\item{s.weights}{the variable containing sampling weights to be incorporated
into propensity score models and balance statistics.}

\item{caliper}{the width(s) of the caliper(s) used for caliper matching.
Calipers are processed by \pkgfun{optmatch}{caliper}. Positive and negative calipers are allowed. See Notes and Examples.}

\item{std.caliper}{\code{logical}; when calipers are specified, whether they
are in standard deviation units (\code{TRUE}) or raw units (\code{FALSE}).}

\item{verbose}{\code{logical}; whether information about the matching
process should be printed to the console.}

\item{\dots}{additional arguments passed to \pkgfun{optmatch}{fullmatch}.
Allowed arguments include \code{min.controls}, \code{max.controls},
\code{omit.fraction}, \code{mean.controls}, \code{tol}, and \code{solver}.
See the \pkgfun{optmatch}{fullmatch} documentation for details. In general,
\code{tol} should be set to a low number (e.g., \code{1e-7}) to get a more
precise solution.

The arguments \code{replace}, \code{m.order}, and \code{ratio} are ignored with a warning.}
}
\description{
In \code{\link[=matchit]{matchit()}}, setting \code{method = "full"} performs optimal full
matching, which is a form of subclassification wherein all units, both
treatment and control (i.e., the "full" sample), are assigned to a subclass
and receive at least one match. The matching is optimal in the sense that
that sum of the absolute distances between the treated and control units in
each subclass is as small as possible. The method relies on and is a wrapper
for \pkgfun{optmatch}{fullmatch}.

Advantages of optimal full matching include that the matching order is not
required to be specified, units do not need to be discarded, and it is less
likely that extreme within-subclass distances will be large, unlike with
standard subclassification. The primary output of full matching is a set of
matching weights that can be applied to the matched sample; in this way,
full matching can be seen as a robust alternative to propensity score
weighting, robust in the sense that the propensity score model does not need
to be correct to estimate the treatment effect without bias. Note: with large samples, the optimization may fail or run very slowly; one can try using \code{\link[=method_quick]{method = "quick"}} instead, which also performs full matching but can be much faster.

This page details the allowable arguments with \code{method = "full"}.
See \code{\link[=matchit]{matchit()}} for an explanation of what each argument means in a general
context and how it can be specified.

Below is how \code{matchit()} is used for optimal full matching:
\preformatted{
matchit(formula,
        data = NULL,
        method = "full",
        distance = "glm",
        link = "logit",
        distance.options = list(),
        estimand = "ATT",
        exact = NULL,
        mahvars = NULL,
        anitexact = NULL,
        discard = "none",
        reestimate = FALSE,
        s.weights = NULL,
        caliper = NULL,
        std.caliper = TRUE,
        verbose = FALSE,
        ...)
}
}
\details{
\subsection{Mahalanobis Distance Matching}{

Mahalanobis distance matching can be done one of two ways:

\enumerate{
\item{
If no propensity score needs to be estimated, \code{distance} should be
set to \code{"mahalanobis"}, and Mahalanobis distance matching will occur
using all the variables in \code{formula}. Arguments to \code{discard} and
\code{mahvars} will be ignored, and a caliper can only be placed on named
variables. For example, to perform simple Mahalanobis distance matching, the
following could be run:

\preformatted{
matchit(treat ~ X1 + X2, method = "nearest",
        distance = "mahalanobis") }

With this code, the Mahalanobis distance is computed using \code{X1} and
\code{X2}, and matching occurs on this distance. The \code{distance}
component of the \code{matchit()} output will be empty.
}
\item{
If a propensity score needs to be estimated for any reason, e.g., for
common support with \code{discard} or for creating a caliper,
\code{distance} should be whatever method is used to estimate the propensity
score or a vector of distance measures, i.e., it should not be
\code{"mahalanobis"}. Use \code{mahvars} to specify the variables used to
create the Mahalanobis distance. For example, to perform Mahalanobis within
a propensity score caliper, the following could be run:

\preformatted{
matchit(treat ~ X1 + X2 + X3, method = "nearest",
        distance =  "glm", caliper = .25,
        mahvars = ~ X1 + X2) }

With this code, \code{X1}, \code{X2}, and \code{X3} are used to estimate the
propensity score (using the \code{"glm"} method, which by default is
logistic regression), which is used to create a matching caliper. The actual
matching occurs on the Mahalanobis distance computed only using \code{X1}
and \code{X2}, which are supplied to \code{mahvars}. Units whose propensity
score difference is larger than the caliper will not be paired, and some
treated units may therefore not receive a match. The estimated propensity
scores will be included in the \code{distance} component of the
\code{matchit()} output. See Examples.
}
}
}
}
\note{
Calipers can only be used when \code{min.controls} is left at its
default.

The option \code{"optmatch_max_problem_size"} is automatically set to
\code{Inf} during the matching process, different from its default in
\emph{optmatch}. This enables matching problems of any size to be run, but
may also let huge, infeasible problems get through and potentially take a
long time or crash R. See \pkgfun{optmatch}{setMaxProblemSize} for more details.
}
\section{Outputs}{
 All outputs described in \code{\link[=matchit]{matchit()}} are returned with
\code{method = "full"} except for \code{match.matrix}. This is because
matching strata are not indexed by treated units as they are in some other
forms of matching. When \code{include.obj = TRUE} in the call to
\code{matchit()}, the output of the call to \pkgfun{optmatch}{fullmatch} will be
included in the output. When \code{exact} is specified, this will be a list
of such objects, one for each stratum of the \code{exact} variables.
}

\examples{
\dontshow{if (requireNamespace("optmatch", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
data("lalonde")

# Optimal full PS matching
m.out1 <- matchit(treat ~ age + educ + race + nodegree +
                    married + re74 + re75,
                  data = lalonde,
                  method = "full")
m.out1
summary(m.out1)

# Optimal full Mahalanobis distance matching within a PS caliper
m.out2 <- matchit(treat ~ age + educ + race + nodegree +
                    married + re74 + re75,
                  data = lalonde,
                  method = "full",
                  caliper = .01,
                  mahvars = ~ age + educ + re74 + re75)
m.out2
summary(m.out2, un = FALSE)

# Optimal full Mahalanobis distance matching within calipers
# of 500 on re74 and re75
m.out3 <- matchit(treat ~ age + educ + re74 + re75,
                  data = lalonde,
                  distance = "mahalanobis",
                  method = "full",
                  caliper = c(re74 = 500,
                              re75 = 500),
                  std.caliper = FALSE)
m.out3
summary(m.out3,
        addlvariables = ~race + nodegree + married,
        data = lalonde,
        un = FALSE)
\dontshow{\}) # examplesIf}
}
\references{
In a manuscript, be sure to cite the following paper if using
\code{matchit()} with \code{method = "full"}:

Hansen, B. B., & Klopfer, S. O. (2006). Optimal Full Matching and Related
Designs via Network Flows. \emph{Journal of Computational and Graphical Statistics},
15(3), 609â€“627. \doi{10.1198/106186006X137047}

For example, a sentence might read:

\emph{Optimal full matching was performed using the MatchIt package (Ho,
Imai, King, & Stuart, 2011) in R, which calls functions from the optmatch
package (Hansen & Klopfer, 2006).}

Theory is also developed in the following article:

Hansen, B. B. (2004). Full Matching in an Observational Study of Coaching
for the SAT. Journal of the American Statistical Association, 99(467),
609â€“618. \doi{10.1198/016214504000000647}
}
\seealso{
\code{\link[=matchit]{matchit()}} for a detailed explanation of the inputs and outputs of
a call to \code{matchit()}.

\pkgfun{optmatch}{fullmatch}, which is the workhorse.

\code{\link{method_optimal}} for optimal pair matching, which is a special
case of optimal full matching, and which relies on similar machinery.
Results from \code{method = "optimal"} can be replicated with \code{method = "full"} by setting \code{min.controls}, \code{max.controls}, and
\code{mean.controls} to the desired \code{ratio}.

\code{\link{method_quick}} for fast generalized quick matching, which is very similar to optimal full matching but can be dramatically faster at the expense of optimality and is less customizable.
}
