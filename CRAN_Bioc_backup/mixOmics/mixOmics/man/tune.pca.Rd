% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tune.pca.R
\name{tune.pca}
\alias{tune.pca}
\title{Tune the number of principal components in PCA}
\usage{
tune.pca(
  X,
  ncomp = NULL,
  center = TRUE,
  scale = FALSE,
  max.iter = 500,
  tol = 1e-09,
  logratio = c("none", "CLR", "ILR"),
  V = NULL,
  multilevel = NULL
)
}
\arguments{
\item{X}{numeric matrix of predictors. \code{NA}s are allowed.}

\item{ncomp}{integer, the number of components to initially analyse in
\code{tune.pca} to choose a final \code{ncomp} for \code{pca}. If
\code{NULL}, function sets \code{ncomp = min(nrow(X), ncol(X))}}

\item{center}{a logical value indicating whether the variables should be
shifted to be zero centered. Alternately, a vector of length equal the
number of columns of \code{X} can be supplied. The value is passed to
\code{\link{scale}}.}

\item{scale}{a logical value indicating whether the variables should be
scaled to have unit variance before the analysis takes place. The default is
\code{FALSE} for consistency with \code{prcomp} function, but in general
scaling is advisable. Alternatively, a vector of length equal the number of
columns of \code{X} can be supplied. The value is passed to
\code{\link{scale}}.}

\item{max.iter}{Integer, the maximum number of iterations.}

\item{tol}{Numeric, convergence tolerance criteria.}

\item{logratio}{one of ('none','CLR','ILR'). Default to 'none'}

\item{V}{Matrix used in the logratio transformation id provided.}

\item{multilevel}{Design matrix for multilevel analysis (for repeated
measurements).}
}
\value{
\code{tune.pca} returns a list with class \code{"tune.pca"}
containing the following components: \item{sdev}{the square root of the
eigenvalues of the covariance/correlation matrix, though the calculation is
actually done with the singular values of the data matrix).}
\item{prop_expl_var}{The proportion of explained variance accounted for
by each principal component.}
\item{cum.var}{the cumulative proportion of explained variance accounted for
by the sequential accumulation of principal components is calculated using
the sum of the proportion of explained variance}
}
\description{
\code{tune.pca} can be used to quickly visualise the proportion of explained
variance for a large number of principal components in PCA.
}
\details{
The calculation is done either by a singular value decomposition of the
(possibly centered and scaled) data matrix, if the data is complete or by
using the NIPALS algorithm if there is data missing. Unlike
\code{\link{princomp}}, the print method for these objects prints the
results in a nice format and the \code{plot} method produces a bar plot of
the percentage of variance explaned by the principal components (PCs).

When using NIPALS (missing values), we make the assumption that the first
(\code{min(ncol(X),} \code{nrow(X)}) principal components will account for
100 \% of the explained variance.

Note that \code{scale= TRUE} cannot be used if there are zero or constant
(for \code{center = TRUE}) variables.

Components are omitted if their standard deviations are less than or equal
to \code{comp.tol} times the standard deviation of the first component. With
the default null setting, no components are omitted. Other settings for
\code{comp.tol} could be \code{comp.tol = sqrt(.Machine$double.eps)}, which
would omit essentially constant components, or \code{comp.tol = 0}.

logratio transform and multilevel analysis are performed sequentially as
internal pre-processing step, through \code{\link{logratio.transfo}} and
\code{\link{withinVariation}} respectively.
}
\examples{
data(liver.toxicity)
tune <- tune.pca(liver.toxicity$gene, center = TRUE, scale = TRUE)
tune
plot(tune)
}
\seealso{
\code{\link{nipals}}, \code{\link{biplot}},
\code{\link{plotIndiv}}, \code{\link{plotVar}} and http://www.mixOmics.org
for more details.
}
\author{
Ignacio GonzÃ¡lez, Leigh Coonan, Kim-Anh Le Cao, Fangzhou Yao, 
Florian Rohart, Al J Abadi
}
\keyword{algebra}
